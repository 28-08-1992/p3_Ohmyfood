@use "../sass/utils/variable";
@use "./layouts/header";
@use "./layouts/footer";
@use "./base";
@use "./utils/mixin";
@use "./animation";

.loader {
  position: fixed;
  inset: 0px;
  background-color: variable.$light_grey_color;
  width: 100vw;
  height: 100vh;
  z-index: 1;
  opacity: 0.85;
  animation: loading 2s forwards;
  display: flex;
  justify-content: center;
  align-items: center;
 &::after {
  content: "";
  width: 100px;
  height: 100px;
  border: 6px solid transparent;
  border-top: 6px solid variable.$secondaire_color;
  border-bottom: 6px solid variable.$tertiaire_color;
  border-radius: 50%;
  animation: spin 0.5s ease-in-out infinite;
}
}
h1 {
  margin-top: 0px;
  padding-top: 30px;
}
.position {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 16px;
  background-color: variable.$grey_color;

 h2 {
  font-size: 17px;
}
}

.explorer {
  text-align: center;
  background-color: variable.$light_grey_color;

 h2 {
  margin-top: 3%;
  font-size: 25px;
  margin-top: 0px;
  padding-top: 30px;
}
 p {
  font-size: 20px;
  opacity: 0.6;
}
 button {
  @include mixin.button;
  @include mixin.gradient;
  @include mixin.box_shadow; 

 &:hover {
  opacity: 0.9;
  @include mixin.hover;
  cursor: pointer;
}
}
}


/*# sourceMappingURL=style.css.map */
.fonctionnement {
  display: flex;
  flex-direction: column;
  margin: 20px;
  h2 {
    margin: 0px;
    padding-left: 1rem;
  }
  ul {
  list-style-type: none;
  padding: 0px;
  @media screen and (min-width: variable.$media){
    display: flex;
    justify-content: center;
    align-items: center;
   }
  }
  li {
  border: 2px solid variable.$light_grey_color ;
  @include mixin.box_shadow; 
  border-radius: 20px;
  background-color: variable.$light_grey_color;
  padding: 1rem;
  display: flex;
  align-items: center;
  gap: 20px;
  margin: 15px 20px 30px 20px;
   &:hover {
    @include mixin.hover;
    cursor: pointer;
    background-color: lighten($color: variable.$light_grey_color , $amount: 2%) ;
     & i {
      color: variable.$primaire_color;
     }
   }
  @media screen and (min-width: variable.$media){
    flex-grow: 1;}
 
  span {
  width: 10px;
  height: 10px;
  border: 2px solid variable.$primaire_color;
  border-radius: 50%;
  color: variable.$text_color;
  background-color: variable.$primaire_color ;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: -35px;
  padding: 5px;
  }
 i {
    color: variable.$darkgry;
  }
  }
}
  .menu {
   background-color: variable.$light_grey_color;
    width: 100%;
    padding-bottom: 50px;
   h2 {
    padding-top: 50px;
    align-self: flex-start;
    margin-left: 20px;
   }
   .menucard{
    display: grid;
    grid-template-columns: repeat(1,1fr);
    place-items: center;
    @media screen and (min-width: variable.$media){
      grid-template-columns: repeat(2,1fr);
   }
  }
  .card_menu {
    position: relative;
    width: 95%;
    height: 250px;
    border-radius: 15px;
    background-color: white;
    box-shadow: 5px 5px 5px 5px variable.$light_grey_color;
    display: flex;
    flex-direction: column;
    margin-bottom: 30px;
  img {
    width: 100%;
    height: 180px;
    object-fit: cover;
    object-position: center;
    border-radius: 15px 15px 0px 0px;
   }}
  span {
   display: flex;
   position: absolute;
   top: 20px;
   right: 20px;
   width: 70px;
   font-size: 16px;
   font-weight: bold;
   padding: 5px 10px;
   background-color: variable.$tertiaire_color;
   color: darken($color: variable.$tertiaire_color , $amount: 40%) ;
   align-items: center;
   justify-content: center;
  }
   .card_body {
      position: relative;
   h3 {
       margin-bottom: 0px;
       margin-top: 10px;
       padding-left: 15px;
      }
    p {
       margin-top: 5px;
       padding-left: 15px;
       opacity: 0.9;
      }
      i {
       position: absolute;
       right: 20px;
       top: 50%;
       transform: translateY(-50%);
       font-size: 25px;
      }
       .fa-solid {
        @include mixin.heart;
        @include mixin.gradient(1);
        }
        &:hover .fa-solid.fa-heart {
          opacity: 1;
          transform: translateY(-50%) scale(1.1);
         }
      }
       }
      
      
  
  

